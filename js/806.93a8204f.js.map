{"version":3,"file":"js/806.93a8204f.js","mappings":"0tBAmGA,IAAMA,GAAKC,EAAAA,EAAAA,IAAaC,EAAAA,GAClBC,GAAcC,EAAAA,EAAAA,IAAI,IAClBC,GAAQD,EAAAA,EAAAA,IAAI,CAChBE,QAAQ,EACRC,QAAS,GACTC,SAAU,IACVC,MAAO,YAIHC,EAAgB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEqC,OAFrCF,EAAAC,KAAA,EAEfJ,GAAaM,EAAAA,EAAAA,IAAWtB,EAAI,uBAAwBmB,EAAAE,KAAA,GAC5BE,EAAAA,EAAAA,IAAQP,GAAW,OAA3CC,EAAeE,EAAAK,KAErBrB,EAAYsB,MAAQR,EAAgBS,KAAKC,KAAI,SAACC,GAAG,MAAM,CACrDC,SAAUD,EAAIE,OAAOD,SACrBE,MAAOH,EAAIE,OAAOC,MAClBC,OAAQJ,EAAIE,OAAOE,OACnBC,UAAWL,EAAIE,OAAOG,UACtBC,SAAUN,EAAIE,OAAOI,UAAY,iBACjCC,UAAWP,EAAIE,OAAOK,WAAa,iBACnCC,kBAAmBR,EAAIE,OAAOM,mBAAqB,iBACpD,IAEDC,QAAQC,IAAI,oBAAqBnC,EAAYsB,OAAQN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAoB,GAAApB,EAAA,YAErDkB,QAAQG,MAAM,+BAA8BrB,EAAAoB,IAC5CE,EAAU,qDAAsD,UAAU,yBAAAtB,EAAAuB,OAAA,GAAA3B,EAAA,kBAE7E,kBApBqB,OAAAJ,EAAAgC,MAAA,KAAAC,UAAA,KAuBhBC,EAAa,SAACC,GAClB,IAAKA,EAAW,MAAO,MACvB,IAAMC,EAAO,IAAIC,KAAyB,IAApBF,EAAUG,SAChC,OAAOF,EAAKG,mBAAmB,QAAS,CACtCC,KAAM,UACNC,MAAO,QACPC,IAAK,WAET,EAGMC,EAAgB,WACpB,IAAMC,EAAYC,EAAAA,GAAWC,cAActD,EAAYsB,OACjDiC,EAAWF,EAAAA,GAAWG,WAC5BH,EAAAA,GAAWI,kBAAkBF,EAAUH,EAAW,eAClDC,EAAAA,GAAeE,EAAU,mBAC3B,EAGMjB,EAAY,SAAClC,EAASE,GAC1BJ,EAAMoB,MAAQ,CACZnB,QAAQ,EACRC,QAASA,EACTC,SAAU,IACVC,MAAOA,EAEX,EAGMoD,EAAY,SAACC,GACjBC,YAAW,WACTrD,IACAoD,EAAME,OAAOC,UACf,GAAG,IACL,E,OAGAC,EAAAA,EAAAA,KAAU,WACRxD,GACF,I,2vECrKA,MAAMyD,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,G","sources":["webpack://resep-bunda/./src/views/guru/LihatNilaiSnbt.vue","webpack://resep-bunda/./src/views/guru/LihatNilaiSnbt.vue?6c0f"],"sourcesContent":["<template>\r\n  <ion-page>\r\n    <ion-header mode=\"ios\">\r\n      <ion-toolbar>\r\n        <ion-title>Hasil TO Kedinasan</ion-title>\r\n        <ion-back-button slot=\"start\" default-href=\"/\" />\r\n      </ion-toolbar>\r\n    </ion-header>\r\n    <ion-content :fullscreen=\"true\">\r\n      <ion-refresher slot=\"fixed\" @ionRefresh=\"doRefresh($event)\">\r\n        <ion-refresher-content />\r\n      </ion-refresher>\r\n      <ion-content class=\"ion-padding\">\r\n        <ion-button style=\"color: white\" expand=\"block\" @click=\"exportToExcel\">\r\n          Ekspor ke Excel\r\n        </ion-button>\r\n        <ion-grid>\r\n          <ion-row>\r\n            <ion-col>\r\n              <h2>Daftar Hasil Ujian</h2>\r\n              <ion-list>\r\n                <ion-item>\r\n                  <ion-label>\r\n                    <table>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Nama Siswa</th>\r\n                          <th>Kelas</th>\r\n                          <th>Mata Pelajaran</th>\r\n                          <th>Jadwal ID</th>\r\n                          <th>Score</th>\r\n                          <th>User ID</th>\r\n                          <th>Tanggal</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr\r\n                          v-for=\"result in examResults\"\r\n                          :key=\"result.jadwalId\"\r\n                        >\r\n                          <td>{{ result.userName || \"Tidak tersedia\" }}</td>\r\n                          <td>{{ result.kelasName || \"Tidak tersedia\" }}</td>\r\n                          <td>{{ result.mataPelajaranName || \"Tidak tersedia\" }}</td>\r\n                          <td>{{ result.jadwalId }}</td>\r\n                          <td>\r\n                            <ion-badge\r\n                              :color=\"result.score < 65 ? 'danger' : 'success'\"\r\n                            >\r\n                              {{ result.score }}\r\n                            </ion-badge>\r\n                          </td>\r\n                          <td>{{ result.userId }}</td>\r\n                          <td>{{ formatDate(result.createdAt) }}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </ion-label>\r\n                </ion-item>\r\n              </ion-list>\r\n            </ion-col>\r\n          </ion-row>\r\n        </ion-grid>\r\n      </ion-content>\r\n      <ion-toast\r\n        :is-open=\"toast.isOpen\"\r\n        :message=\"toast.message\"\r\n        :duration=\"toast.duration\"\r\n        :color=\"toast.color\"\r\n        @did-dismiss=\"() => (toast.isOpen = false)\"\r\n      ></ion-toast>\r\n    </ion-content>\r\n  </ion-page>\r\n</template>\r\n\r\n<script setup>\r\nimport {\r\n  IonPage,\r\n  IonHeader,\r\n  IonToolbar,\r\n  IonTitle,\r\n  IonBackButton,\r\n  IonContent,\r\n  IonRefresher,\r\n  IonRefresherContent,\r\n  IonGrid,\r\n  IonRow,\r\n  IonCol,\r\n  IonList,\r\n  IonItem,\r\n  IonLabel,\r\n  IonToast,\r\n  IonBadge,\r\n  IonButton,\r\n} from \"@ionic/vue\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { getFirestore, collection, getDocs } from \"firebase/firestore\";\r\nimport { firebaseApp } from \"../firebase.js\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst db = getFirestore(firebaseApp);\r\nconst examResults = ref([]); // Array untuk menyimpan hasil ujian siswa\r\nconst toast = ref({\r\n  isOpen: false,\r\n  message: \"\",\r\n  duration: 2000,\r\n  color: \"success\",\r\n});\r\n\r\n// Fungsi untuk mengambil data hasil ujian dari Firestore\r\nconst fetchExamResults = async () => {\r\n  try {\r\n    const resultsRef = collection(db, \"examResults/results\"); // Mengambil data dari examResults/results\r\n    const resultsSnapshot = await getDocs(resultsRef);\r\n\r\n    examResults.value = resultsSnapshot.docs.map((doc) => ({\r\n      jadwalId: doc.data().jadwalId,\r\n      score: doc.data().score,\r\n      userId: doc.data().userId,\r\n      createdAt: doc.data().createdAt,\r\n      userName: doc.data().userName || \"Tidak tersedia\",\r\n      kelasName: doc.data().kelasName || \"Tidak tersedia\",\r\n      mataPelajaranName: doc.data().mataPelajaranName || \"Tidak tersedia\",\r\n    }));\r\n\r\n    console.log(\"Data hasil ujian:\", examResults.value); // Verifikasi log\r\n  } catch (error) {\r\n    console.error(\"Error fetching exam results:\", error);\r\n    showToast(\"Terjadi kesalahan saat mengambil data hasil ujian.\", \"danger\");\r\n  }\r\n};\r\n\r\n// Fungsi untuk memformat tanggal\r\nconst formatDate = (timestamp) => {\r\n  if (!timestamp) return \"N/A\";\r\n  const date = new Date(timestamp.seconds * 1000);\r\n  return date.toLocaleDateString(\"id-ID\", {\r\n    year: \"numeric\",\r\n    month: \"short\",\r\n    day: \"numeric\",\r\n  });\r\n};\r\n\r\n// Fungsi untuk mengekspor data ke Excel\r\nconst exportToExcel = () => {\r\n  const worksheet = XLSX.utils.json_to_sheet(examResults.value);\r\n  const workbook = XLSX.utils.book_new();\r\n  XLSX.utils.book_append_sheet(workbook, worksheet, \"Hasil Ujian\");\r\n  XLSX.writeFile(workbook, \"hasil_ujian.xlsx\");\r\n};\r\n\r\n// Fungsi untuk menampilkan notifikasi toast\r\nconst showToast = (message, color) => {\r\n  toast.value = {\r\n    isOpen: true,\r\n    message: message,\r\n    duration: 2000,\r\n    color: color,\r\n  };\r\n};\r\n\r\n// Fungsi refresh data\r\nconst doRefresh = (event) => {\r\n  setTimeout(() => {\r\n    fetchExamResults();\r\n    event.target.complete();\r\n  }, 2000);\r\n};\r\n\r\n// Menarik data saat komponen dimuat\r\nonMounted(() => {\r\n  fetchExamResults();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n}\r\n\r\nth,\r\ntd {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f2f2f2;\r\n  font-weight: bold;\r\n}\r\n\r\ntbody tr:nth-child(even) {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\ntbody tr:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n</style>\r\n","import script from \"./LihatNilaiSnbt.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LihatNilaiSnbt.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./LihatNilaiSnbt.vue?vue&type=style&index=0&id=58a9527d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-58a9527d\"]])\n\nexport default __exports__"],"names":["db","getFirestore","firebaseApp","examResults","ref","toast","isOpen","message","duration","color","fetchExamResults","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resultsRef","resultsSnapshot","wrap","_context","prev","next","collection","getDocs","sent","value","docs","map","doc","jadwalId","data","score","userId","createdAt","userName","kelasName","mataPelajaranName","console","log","t0","error","showToast","stop","apply","arguments","formatDate","timestamp","date","Date","seconds","toLocaleDateString","year","month","day","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","doRefresh","event","setTimeout","target","complete","onMounted","__exports__"],"sourceRoot":""}